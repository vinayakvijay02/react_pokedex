{"version":3,"sources":["utils.js","Pokedex.js","Pokemon.js","App.js","index.js"],"names":["firstCharUpperCase","name","charAt","toUpperCase","slice","useStyles","makeStyles","theme","root","flexGrow","padding","form","display","justifyContent","alignItems","CardContent","spacing","textAlign","color","palette","text","secondary","appBar","marginBottom","backgroundColor","red","media","height","width","margin","avatar","cardHeader","card","title","breakpoints","up","search","position","borderRadius","shape","fade","common","white","marginLeft","searchIcon","pointerEvents","inputRoot","inputInput","paddingLeft","transition","transitions","create","Pokedex","props","history","classes","useState","pokemonData","setPokemonData","filter","setFilter","useEffect","axios","get","then","response","results","data","newPokemonData","forEach","pokemon","index","types","id","sprite","className","AppBar","Toolbar","Typography","variant","noWrap","InputBase","onChange","e","target","value","placeholder","input","inputProps","Grid","container","Object","keys","map","pokemonId","includes","item","Card","onClick","push","CardHeader","Avatar","aria-label","CardActionArea","CardMedia","image","getPokemonCard","CircularProgress","style","alignContent","maxWidth","top","left","paddingTop","expand","transform","duration","shortest","expandOpen","TYPE_COLORS","bug","dark","dragon","electric","fairy","fighting","fire","flying","ghost","grass","ground","ice","normal","poison","psychic","rock","steel","water","Pokemon","match","params","undefined","setPokemon","React","catch","error","species","weight","sprites","fullImageUrl","themeColor","front_default","type","Map","prototype","entries","direction","justify","action","IconButton","subheader","typeInfo","key","colorSelectedValue","Chip","src","label","clickable","Link","href","url","generatePokemonJSX","App","basename","process","exact","path","render","createBrowserHistory","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.226466eb.chunk.js","sourcesContent":["export const firstCharUpperCase = (name) =>\r\n  name.charAt(0).toUpperCase() + name.slice(1);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\n\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport mockData from \"./mockData\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport axios from \"axios\";\r\nimport { firstCharUpperCase } from \"./utils\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { red } from \"@material-ui/core/colors\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport ShareIcon from \"@material-ui/icons/Share\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\n\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\n\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport { fade } from \"@material-ui/core/styles\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    padding: 10,\r\n  },\r\n  form: {\r\n    padding: 10,\r\n    flexGrow: 1,\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  CardContent: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  appBar: {\r\n    marginBottom: 10,\r\n    backgroundColor: red[500],\r\n  },\r\n  media: {\r\n    height: \"130px\",\r\n    width: \"130px\",\r\n    margin: \"auto\",\r\n    height: 0,\r\n    paddingTop: \"56.25%\", // 16:9\r\n  },\r\n\r\n  avatar: {\r\n    backgroundColor: red[500],\r\n  },\r\n  cardHeader: {\r\n    backgroundColor: \"#A9A9A9\",\r\n  },\r\n  card: {\r\n    backgroundColor: \"#DCDCDC\",\r\n  },\r\n\r\n  title: {\r\n    flexGrow: 1,\r\n    display: \"none\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"block\",\r\n    },\r\n  },\r\n  search: {\r\n    position: \"relative\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    \"&:hover\": {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginLeft: 0,\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      marginLeft: theme.spacing(1),\r\n      width: \"auto\",\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  inputRoot: {\r\n    color: \"inherit\",\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: \"12ch\",\r\n      \"&:focus\": {\r\n        width: \"20ch\",\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nconst Pokedex = (props) => {\r\n  const { history } = props;\r\n  const classes = useStyles();\r\n  const [pokemonData, setPokemonData] = useState({});\r\n  const [filter, setFilter] = useState(\"\");\r\n  const [imageLoading, setimageLoading] = useState(true);\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"https://pokeapi.co/api/v2/pokemon?limit=807\")\r\n      .then(function (response) {\r\n        const { data } = response;\r\n        const { results } = data;\r\n        const newPokemonData = {};\r\n        results.forEach((pokemon, index, types) => {\r\n          newPokemonData[index + 1] = {\r\n            id: index + 1,\r\n            name: pokemon.name,\r\n            sprite: `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${\r\n              index + 1\r\n            }.png`,\r\n\r\n            // sprite: `https://pokeres.bastionbot.org/images/pokemon/${\r\n            //   index + 1\r\n            // }.png`,\r\n          };\r\n        });\r\n        setPokemonData(newPokemonData);\r\n      });\r\n  }, [pokemonData]);\r\n\r\n  const getPokemonCard = (pokemonId) => {\r\n    const { id, name, sprite } = pokemonData[pokemonId];\r\n\r\n    return (\r\n      <Grid item item xs={12} sm={2} key={pokemonId}>\r\n        <Card className={classes.card} onClick={() => history.push(`/${id}`)}>\r\n          {/* {imageLoading ? (\r\n            <img\r\n              src={spinner}\r\n              style={{ width: \"5em\", height: \"5em\" }}\r\n              className=\"card-img-top rounded mx-auto d-block mt-2\"\r\n            />\r\n          ) : null} */}\r\n          <CardHeader\r\n            className={classes.cardHeader}\r\n            avatar={\r\n              <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n                <Typography>{`${id}`}</Typography>\r\n              </Avatar>\r\n            }\r\n            title={` ${firstCharUpperCase(name)}`}\r\n          />\r\n          <CardActionArea>\r\n            <CardMedia\r\n              className={classes.media}\r\n              image={sprite}\r\n              title=\"Contemplative Reptile\"\r\n            />\r\n          </CardActionArea>\r\n        </Card>\r\n      </Grid>\r\n    );\r\n  };\r\n  const handleSearchChange = (e) => {\r\n    setFilter(e.target.value);\r\n  };\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" className={classes.appBar}>\r\n        <Toolbar>\r\n          <Typography className={classes.title} variant=\"h6\" noWrap>\r\n            PokéDex\r\n          </Typography>\r\n          <div className={classes.search}>\r\n            <div className={classes.searchIcon}>\r\n              <SearchIcon />\r\n            </div>\r\n            <InputBase\r\n              onChange={handleSearchChange}\r\n              placeholder=\"Search pokemon...\"\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n              inputProps={{ \"aria-label\": \"search\" }}\r\n            />\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n\r\n      {pokemonData ? (\r\n        <Grid container spacing={3}>\r\n          {Object.keys(pokemonData).map(\r\n            (pokemonId) =>\r\n              pokemonData[pokemonId].name.includes(filter) &&\r\n              getPokemonCard(pokemonId)\r\n          )}\r\n        </Grid>\r\n      ) : (\r\n        <CircularProgress\r\n          color=\"secondary\"\r\n          style={{ alignContent: \"center\" }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pokedex;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport mockData from \"./mockData\";\r\nimport { Typography, Link } from \"@material-ui/core\";\r\nimport { firstCharUpperCase } from \"./utils\";\r\nimport axios from \"axios\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport FaceIcon from \"@material-ui/icons/Face\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { red } from \"@material-ui/core/colors\";\r\n\r\nimport ArrowBackRoundedIcon from \"@material-ui/icons/ArrowBackRounded\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 600,\r\n    position: \"fixed\",\r\n    top: \"10%\",\r\n    left: \"40%\",\r\n  },\r\n  media: {\r\n    height: 130,\r\n\r\n    paddingTop: \"56.25%\", // 16:9\r\n  },\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\",\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500],\r\n  },\r\n}));\r\nconst TYPE_COLORS = {\r\n  bug: \"#B1C12E\",\r\n  dark: \"#4F3A2D\",\r\n  dragon: \"#755EDF\",\r\n  electric: \"#FCBC17\",\r\n  fairy: \"#F4B1F4\",\r\n  fighting: \"#823551D\",\r\n  fire: \"#E73B0C\",\r\n  flying: \"#A3B3F7\",\r\n  ghost: \"#6060B2\",\r\n  grass: \"#74C236\",\r\n  ground: \"#D3B357\",\r\n  ice: \"#A3E7FD\",\r\n  normal: \"#C8C4BC\",\r\n  poison: \"#934594\",\r\n  psychic: \"#ED4882\",\r\n  rock: \"#B9A156\",\r\n  steel: \"#B5B5C3\",\r\n  water: \"3295F6\",\r\n};\r\nconst Pokemon = (props) => {\r\n  const { history } = props;\r\n  const { match } = props;\r\n  const { params } = match;\r\n  const { pokemonId } = params;\r\n  const [pokemon, setPokemon] = useState(undefined);\r\n  const classes = useStyles();\r\n  const [expanded, setExpanded] = React.useState(false);\r\n\r\n  const handleExpandClick = () => {\r\n    setExpanded(!expanded);\r\n  };\r\n  useEffect(() => {\r\n    axios\r\n      .get(`https://pokeapi.co/api/v2/pokemon/${pokemonId}/`)\r\n      .then(function (response) {\r\n        const { data } = response;\r\n        setPokemon(data);\r\n      })\r\n      .catch(function (error) {\r\n        setPokemon(false);\r\n      });\r\n  }, [pokemonId]);\r\n  const generatePokemonJSX = () => {\r\n    const { name, id, species, height, weight, types, sprites } = pokemon;\r\n\r\n    const fullImageUrl = `https://pokeres.bastionbot.org/images/pokemon/${id}.png`;\r\n    const { front_default } = sprites;\r\n    const colorValue = types.map((type) => type.type.name);\r\n    const themeColor = colorValue.map(\r\n      Map.prototype.get,\r\n      new Map(Object.entries(TYPE_COLORS).map(([k, v]) => [k, v]))\r\n    );\r\n\r\n    return (\r\n      <Grid\r\n        item\r\n        container\r\n        direction=\"column\"\r\n        justify=\"center\"\r\n        alignItems=\"center\"\r\n      >\r\n        <Card>\r\n          <CardHeader\r\n            avatar={\r\n              <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n                {`${id}`}\r\n              </Avatar>\r\n            }\r\n            action={\r\n              <IconButton aria-label=\"settings\">\r\n                {pokemon !== undefined && (\r\n                  <ArrowBackRoundedIcon\r\n                    variant=\"contained\"\r\n                    onClick={() => history.push(\"/\")}\r\n                  />\r\n                )}\r\n              </IconButton>\r\n            }\r\n            title={firstCharUpperCase(name)}\r\n            subheader={types.map((typeInfo, key) => {\r\n              const colorSelectedValue = themeColor[key];\r\n              const { type } = typeInfo;\r\n              const { name } = type;\r\n\r\n              return (\r\n                <Chip\r\n                  key={name}\r\n                  //  icon={`<img alt=\"${name}\"  src=\"${MyIcon}\" style=\"max-height: 10px; max-width: 10px;\" >`}\r\n                  avatar={\r\n                    <Avatar\r\n                      src={`./images/types/${name}.png`}\r\n                      style={{ backgroundColor: `${colorSelectedValue}` }}\r\n                    />\r\n                  }\r\n                  label={`${name}`}\r\n                  clickable\r\n                  color=\"primary\"\r\n                  style={{ backgroundColor: `${colorSelectedValue}` }}\r\n                />\r\n              );\r\n              // return <Typography key={name}> {`${name}`}</Typography>;\r\n            })}\r\n          />\r\n          <CardMedia\r\n            className={classes.media}\r\n            image={fullImageUrl}\r\n            title=\"Paella dish\"\r\n          />\r\n          <CardContent>\r\n            <Typography>\r\n              <Typography variant=\"h3\">Pokemon Info</Typography>\r\n              <Typography>\r\n                {\"Species: \"}\r\n                <Link href={species.url}>{species.name} </Link>\r\n              </Typography>\r\n              <Typography>Height: {height} </Typography>\r\n              <Typography>Weight: {weight} </Typography>\r\n              {/* <Typography variant=\"h6\"> Types:</Typography>\r\n              {types.map((typeInfo) => {\r\n                const { type } = typeInfo;\r\n                const { name } = type;\r\n                return <Typography key={name}> {`${name}`}</Typography>;\r\n              })} */}\r\n            </Typography>\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n    );\r\n  };\r\n  return (\r\n    <>\r\n      {pokemon === undefined && <CircularProgress />}\r\n      {pokemon !== undefined && pokemon && generatePokemonJSX(pokemon)}\r\n      {pokemon === false && <Typography> Pokemon not found</Typography>}\r\n    </>\r\n  );\r\n};\r\nexport default Pokemon;\r\n","import React from \"react\";\nimport Pokedex from \"./Pokedex\";\nimport { BrowserRouter as Switch, Route } from \"react-router-dom\";\nimport Pokemon from \"./Pokemon\";\n\nfunction App() {\n  return (\n    <Switch basename={process.env.PUBLIC_URL}>\n      <Route exact path=\"/\" render={(props) => <Pokedex {...props} />} />\n      <Route\n        exact\n        path=\"/:pokemonId\"\n        render={(props) => <Pokemon {...props} />}\n      />\n    </Switch>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { createBrowserHistory } from \"history\";\nconst history = createBrowserHistory();\nReactDOM.render(\n  <React.StrictMode>\n    <Router history={history}>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}